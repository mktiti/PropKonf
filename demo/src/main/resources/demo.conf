script {
    // Block declaration, vars declared are scoped
    $base-path = "~/long/path/to/a/base/directory" // Variable declaration
    init = "${base-path}/start.sh" // String interpolation
    stop = "${base-path}/stop.sh"
    check = "${base-path}/check.sh"
}

# server {
    // blocks starting with # are ignored
    // they do have to be syntactically correct to parse tho

    web-port = 100
    console-port = 200
    log-port = 300
}

server {
    $port = ${PORT ?: 8000} // Environment variable passed, or else
    web-port = ${port + 1} // Simple expressions
    console-port = ${port + 2}
    log-port = ${port + 3}

    // Should probably be done programmatically, but showing off capabilities
    $needs-root = ${port < 1000}
    // ". :" is the conditional operator (~"? :" in Java)
    needs-root-message = "Root account: ${needs-root . "required on UNIX (?)" : "not required"}"

    cache { // Nested blocks
        enabled = true
        location = "/tmp/myapp/${external-loc ?: "unknown"}/cache"
        strategy = "lru"
    }
}

demo {
    inner {
        useless {
            // This is truly just for the demo
            x = ${1 + 2 + (100 - 94) / 2} // = 1 + 2 + (6 / 2) = 6
            b = ${(100 == (99 + 1)) && (2 % 3 == 2)} // = true && true = true
        }
    }
}
